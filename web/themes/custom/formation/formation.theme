<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\StringTranslation\TranslatableMarkup;

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 *
 * Example on how to alter theme settings form
 */
function formation_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = [
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  ];
  $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = [
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  ];
}

/**
 * Implements hook_theme_suggestions_node_alter().
 */
function formation_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  if (isset($variables["elements"]["#node"]) && $variables["elements"]["#node"]->id() == 2) {
    $suggestions[] = 'node__special_template';
  }
}

//function formation_entity_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
//  die("oo");
//}

/** Implements  hook_preprocess_HOOK()  */
function formation_preprocess_node(&$variables) {
  $variables['color'] = t('red');
//  $variables['title'] = 'toto';
//  $variables["elements"]["#title"] = new TranslatableMarkup('Top search phrases');
//  $variables["#title"] = new TranslatableMarkup('Top search phrases');

//  if ($node->bundle() == 'article') {
//    $node->setTitle("toto");
//  }
//  $variables['node'] = $node;
}


//function formation_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
//  if ( == "node") {
//    $suggestions[] = 'node__toto2';
//  }
//}

/**
 * Implements hook_preprocess_HOOK().
 */
function formation_preprocess_page(&$variables) {
  $variables['#attached']['library'][] = 'formation/color.preview';
}
